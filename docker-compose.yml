services:
  userservice:
    build:
      context: .
      dockerfile: UserService/Dockerfile
    command: ["dotnet", "UserService/UserService.dll"]
    ports:
      - "5201:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ConnectionStrings__DockerConnection=Server=userdb;Database=userdb;User=root;Password=password
      - ASPNETCORE_URLS=http://+:80
      - RabbitMQ__DockerConnection=host=rabbitmq;username=guest;password=guest
    networks:
      - backend
    depends_on:
      userdb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  
  postservice:
    build:
      context: .
      dockerfile: PostService/Dockerfile
    command: ["dotnet", "PostService/PostService.dll"]
    ports:
      - "5202:80"
    environment:
      - ASPNETCORE_URLS=http://+:80
      - RabbitMQ__DockerConnection=host=rabbitmq;username=guest;password=guest
      - BaseAddresses__DockerBaseAddress=http://userservice/api/user/
      - ASPNETCORE_ENVIRONMENT=Docker
      - ConnectionStrings__DockerConnection=Server=postdb;Database=postdb;User=root;Password=password
    networks:
      - backend
    depends_on:
      postdb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  
  apigateway:
    build:
      context: .
      dockerfile: ApiGateway/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "5200:80"
    depends_on:
      - userservice
      - postservice
    networks:
      - backend

  userdb:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: userdb
    ports:
      - "3306:3306"
    volumes:
      - userdb-data:/var/lib/mysql
    networks:
      - backend
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
    command: >
      --server-id=1
      --log-bin=mysql-bin

  postdb:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: postdb
    ports:
      - "3307:3306"
    volumes:
      - postdb-data:/var/lib/mysql
    networks:
      - backend
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
    command: >
      --server-id=1
      --log-bin=mysql-bin

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - backend
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      retries: 5
      timeout: 5s

networks:
  backend:
    driver: bridge

volumes:
  userdb-data:
  postdb-data:

